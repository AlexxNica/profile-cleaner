#!/bin/bash

if [[ -z $(which parallel) ]]; then
	echo "GNU Parallel is now a requirement of this script."
	echo "Please install it and try again."
	exit 1
fi

do_clean() {
	bsize=$(ls -l "$1" | awk {'print $5'})
	sqlite3 "$1" vacuum &>/dev/null
	sqlite3 "$1" reindex &>/dev/null
	asize=$(ls -l "$1" | awk {'print $5'})
	dsize=$(echo "scale=2; ($bsize-$asize)/1048576" | bc)
	echo "$1" reduced by $dsize Mbytes
}

do_chromium() {
	prepath=$HOME/.config/chromium
	[[ -h "$prepath" ]] && profilepath=$(readlink $prepath) || profilepath="$prepath"
	[[ ! -d "$profilepath" ]] &&	echo "Error: no profile directory for chromium found." &&	exit 1
	find ${profilepath} -maxdepth 2 -type f -name 'Histor*' -o -name 'Archiv*' -o -name 'Safe*' | SHELL=/bin/bash parallel do_clean 2>/dev/null
}

do_chrome() {
	prepath=$HOME/.config/google-chrome
	[[ -h "$prepath" ]] && profilepath=$(readlink $prepath) || profilepath="$prepath"
	[[ ! -d "$profilepath" ]] && echo "Error: no profile directory for chrome found." &&	exit 1
	find ${profilepath} -maxdepth 2 -type f -name 'Histor*' -o -name 'Archiv*' -o -name 'Safe*' | SHELL=/bin/bash parallel do_clean 2>/dev/null
}

do_xulbased() {
	if [[ -h "$prepath" ]]; then
		profilepath=$(readlink $prepath)
	else
		profilepath="$prepath"
	fi

	if [[ ! -d "$profilepath" ]]; then
		echo "Error: cannot locate $profilepath"
		exit 1
	fi

	[[ ! -f $profilepath/profiles.ini ]] && echo "Error: cannot locate $profilepath/profiles.ini to determine names of profiles." && 	exit 1

	# workArr is a raw list of profiles
	workArr=( $(grep '[P,p]'ath $profilepath/profiles.ini | sed -e 's/[P,p]ath=//') )	# read each profile into the work array

	# FinalArr is a processed list of profiles
	# they are formated to abs paths since some are rel and some are abs
	index=0
	for i in "${workArr[@]}"; do
		if [ ! -d ${profilepath}/"$i" ]; then
			FinalArr[index]="$i"
		else
			FinalArr[index]="$profilepath/$i"
		fi
		index=$index+1
	done

	# here is the actual worker
	find -L ${FinalArr[@]} -maxdepth 2 -name '*.sqlite' | SHELL=/bin/bash parallel do_clean 2>/dev/null	
}

do_firefox() {
	prepath=$HOME/.mozilla/firefox
	do_xulbased
}

do_conkeror() {
	prepath=$HOME/.conkeror.mozdev.org/conkeror
	do_xulbased
}

do_heftig-aurora() {
prepath=$HOME/.mozilla/aurora
do_xulbased
}

do_thunderbird() {
	prepath=$HOME/.thunderbird
	do_xulbased
}

export -f do_clean

case "$1" in
	c)
		do_chromium
		exit 0
		;;
	gc)
		do_chrome
		exit 0
		;;	
	f)
		do_firefox
		exit 0
		;;
	ck)
		do_conkeror
		exit 0
		;;
	h)
		do_heftig-aurora
		exit 0
		;;
	t)
		do_thunderbird
		exit 0
		;;
	*)
		echo -en "      \E[31m::USAGE::"
		tput sgr0 
		echo
		echo "$0 {a|c|ck|f|gc|t}"
		echo " c) chromium"
		echo "ck) conkeror"
		echo " f) firefox"
		echo "gc) google chrome"
		echo " h) heftig's aurora"
		echo " t) thunderbird"
		exit 0
		;;
esac
