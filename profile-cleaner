#!/bin/bash
export BLD="\e[01m" RED="\e[01;31m" GRN="\e[01;32m" YLW="\e[01;33m" RST="\e[00m"
VERS="1.84"

if [[ -z $(which parallel) ]]; then
	echo "GNU Parallel is now a requirement of this script."
	echo "Please install it and try again."
	exit 1
fi

[[ -f /tmp/accounting.db ]] && rm -f /tmp/accounting.db
echo -e "${RED}profile-cleaner v$VERS${RST}"
echo

do_clean() {
	echo -en "${GRN} Cleaning${RST} ${1##*/}"
	bsize=$(ls -l "$1" | awk {'print $5'})
	sqlite3 "$1" vacuum
	sqlite3 "$1" reindex
	asize=$(ls -l "$1" | awk {'print $5'})
	dsize=$(echo "scale=2; ($bsize-$asize)/1048576" | bc)
	#echo "$1" reduced by $dsize Mbytes
	echo -e "$(tput cr)$(tput cuf 46) ${GRN}done${RST}  -${YLW}${dsize}${RST} Mbytes"
	echo "$name,$dsize" >> /tmp/accounting.db
}

do_chromebased() {
	[[ -h "$prepath" ]] && profilepath=$(readlink $prepath) || profilepath="$prepath"
	[[ ! -d "$profilepath" ]] &&	echo "Error: no profile directory for $name found." &&	exit 1
	echo -e " ${RED}Cleaning profile for $name${RTS}"
	find "$profilepath" -maxdepth 2 -type f -name 'Histor*' -o -name 'Archiv*' -o -name 'Safe*' | SHELL=/bin/bash parallel -k do_clean 2>/dev/null
	echo
	echo -e " ${BLD}Profile for $name was reduced by ${YLW}$(grep $name /tmp/accounting.db | gawk -F, '{ print $2 }' | paste -sd+ - | bc)${RST} ${BLD}Mbytes.${RTS}"
	[[ -f /tmp/accounting.db ]] && rm -f /tmp/accounting.db
}

do_xulbased() {
	if [[ -h "$prepath" ]]; then
		profilepath=$(readlink $prepath)
	else
		profilepath="$prepath"
	fi

	[[ "$name" = "aurora" ]] && name="heftig aurora"

	if [[ ! -d "$profilepath" ]]; then
		echo "Error: cannot locate $profilepath"
		echo "This is the default path for $name and where $0 expects to find it."
		exit 1
	fi

	[[ ! -f $profilepath/profiles.ini ]] && echo "Error: cannot locate $profilepath/profiles.ini to determine names of profiles for $name." && 	exit 1

	# workArr is a raw list of profiles
	workArr=( $(grep '[P,p]'ath $profilepath/profiles.ini | sed -e 's/[P,p]ath=//' -e 's/\r//') )	# read each profile into the work array

	# FinalArr is a processed list of profiles
	# they are formated to abs paths since some are rel and some are abs
	index=0
	for i in "${workArr[@]}"; do
		if [ ! -d ${profilepath}/"$i" ]; then
			FinalArr[index]="$i"
		else
			FinalArr[index]="$profilepath/$i"
		fi
		index=$index+1
	done

	# here is the actual worker
	echo -e " ${RED}Cleaning profile for $name${RTS}"
	find -L ${FinalArr[@]} -maxdepth 2 -name '*.sqlite' | SHELL=/bin/bash parallel do_clean 2>/dev/null	
	echo
	echo -e " ${BLD}Profile for $name was reduced by ${YLW}$(grep $name /tmp/accounting.db | gawk -F, '{ print $2 }' | paste -sd+ - | bc)${RST} ${BLD}Mbytes.${RTS}"
	[[ -f /tmp/accounting.db ]] && rm -f /tmp/accounting.db
}

do_dbbased() {
	[[ -h "$prepath" ]] && profilepath=$(readlink $prepath) || profilepath="$prepath"
	[[ ! -d "$profilepath" ]] &&	echo "Error: no profile directory for $name found." &&	exit 1
	echo -e " ${RED}Cleaning profile for $name${RTS}"
	find ${profilepath} -maxdepth 2 -type f -name '*.db' | SHELL=/bin/bash parallel do_clean 2>/dev/null
	echo
	echo -e " ${BLD}Profile for $name was reduced by ${YLW}$(grep $name /tmp/accounting.db | gawk -F, '{ print $2 }' | paste -sd+ - | bc)${RST} ${BLD}Mbytes.${RTS}"
	[[ -f /tmp/accounting.db ]] && rm -f /tmp/accounting.db
}

export -f do_clean

case "$1" in
	C|c)
		name="chromium" ; export name
		prepath=$XDG_CONFIG_HOME/$name
		do_chromebased
		exit 0
		;;
	Gc|gC|GC|gc)
		name="google-chrome" ; export name
		prepath=$XDG_CONFIG_HOME/$name
		do_chromebased
		exit 0
		;;	
	F|f)
		name="firefox"; export name
		prepath=$HOME/.mozilla/$name
		do_xulbased
		exit 0
		;;
	CK|cK|Ck|ck)
		name="conkeror"; export name
		prepath=$HOME/.conkeror.mozdev.org/$name
		do_xulbased
		exit 0
		;;
	H|h)
		name="heftig aurora"; export name
		prepath=$HOME/.mozilla/aurora
		do_xulbased
		exit 0
		;;
	T|t)
		name="thunderbird"; export name
		prepath=$HOME/.$name
		do_xulbased
		exit 0
		;;
	M|m)
		name="midori"; export name
		prepath=$XDG_CONFIG_HOME/$name
		do_dbbased
		exit 0
		;;
	Q|q)
		name="qupzilla"; export name
		prepath=$HOME/.$name/profiles
		do_dbbased
		exit 0
		;;
	*)
		echo -e "$0 ${GRN}{a|c|ck|f|gc|t}${RST}"
		echo " c) Chromium"
		echo "ck) Conkeror"
		echo " f) Firefox"
		echo "gc) Google Chrome"
		echo " h) Heftig's Aurora"
		echo " m) Midori"
		echo " t) Thunderbird"
		echo " q) QupZilla"
		exit 0
		;;
esac
